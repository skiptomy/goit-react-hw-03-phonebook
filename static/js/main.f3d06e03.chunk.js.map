{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/App/App.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App/App.js","index.js","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","saveContact","resetForm","this","className","styles","form","onSubmit","inputField","onChange","submitBtn","type","Component","Filter","filter","handleFilterChange","wrapper","filterInput","ContactItem","contact","handleRemove","removeBtn","onClick","ContactList","contacts","contactList","map","contactItem","key","id","App","isExistContact","find","toLowerCase","alert","checkLength","string","length","shortid","generate","concat","savedContacts","localStorage","getItem","JSON","parse","prevState","setItem","stringify","includes","visibleContacts","applyFilter","container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3d06e03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"ContactForm_inputField__2qKkL\",\"form\":\"ContactForm_form__1fuOn\",\"submitBtn\":\"ContactForm_submitBtn__J-Qu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"contactItem\":\"ContactList_contactItem__EQAbQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\"};","/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    saveContact: propTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.saveContact({ ...this.state });\n    this.resetForm();\n  };\n\n  resetForm() {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  }\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input className={styles.inputField} name=\"name\" value={this.state.name} onChange={this.handleChange} />\n        </label>\n\n        <label>\n          Number\n          <input className={styles.inputField} name=\"number\" value={this.state.number} onChange={this.handleChange} />\n        </label>\n\n        <button className={styles.submitBtn} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ filter, handleFilterChange }) => (\n  <div className={styles.wrapper}>\n    <label>\n      Contact Filter:\n      <input className={styles.filterInput} value={filter} onChange={handleFilterChange} />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  filter: propTypes.string.isRequired,\n  handleFilterChange: propTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './ContactItem.module.css';\n\nconst ContactItem = ({ contact, handleRemove }) => (\n  <>\n    <span className={styles.name}>{contact.name}: </span>\n    <span className={styles.number}>{contact.number}</span>\n    <button className={styles.removeBtn} type=\"button\" onClick={handleRemove}>\n      Delete\n    </button>\n  </>\n);\n\nContactItem.propTypes = {\n  contact: propTypes.exact({\n    name: propTypes.string.isRequired,\n    number: propTypes.string.isRequired,\n  }).isRequired,\n  handleRemove: propTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, handleRemove }) => (\n  <ul className={styles.contactList}>\n    {contacts.map(contact => (\n      <li className={styles.contactItem} key={contact.id}>\n        <ContactItem contact={contact} handleRemove={() => handleRemove(contact.id)} />\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n    }),\n  ).isRequired,\n  handleRemove: propTypes.func.isRequired,\n};\n\nexport default ContactList;\n","/* eslint-disable no-alert */\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem('contacts');\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  isExistContact = name => {\n    const { contacts } = this.state;\n    return contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n  };\n\n  saveContact = ({ name, number }) => {\n    if (this.isExistContact(name)) {\n      alert(`Already in contacts ${name}`);\n      return;\n    }\n\n    const checkLength = string => string.length < 1;\n\n    if (checkLength(`${name}`) || checkLength(`${number}`)) {\n      alert('Please, fill in all required entry fields');\n      return;\n    }\n\n    const contact = {\n      name,\n      number,\n      id: shortid.generate(),\n    };\n\n    this.setState(state => ({\n      contacts: state.contacts.concat(contact),\n    }));\n  };\n\n  handleFilterChange = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  handleRemove = id => {\n    this.setState(state => {\n      const contacts = state.contacts.filter(contact => contact.id !== id);\n      const filter = contacts.length > 1 ? state.filter : '';\n      return { contacts, filter };\n    });\n  };\n\n  applyFilter() {\n    return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter.toLowerCase()));\n  }\n\n  render() {\n    const visibleContacts = this.applyFilter();\n    const { contacts } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm saveContact={this.saveContact} />\n\n        <h2>Contacts</h2>\n        {contacts.length > 1 && <Filter filter={this.state.filter} handleFilterChange={this.handleFilterChange} />}\n        {visibleContacts.length > 0 && <ContactList contacts={visibleContacts} handleRemove={this.handleRemove} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './base.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactItem_name__1bT_p\",\"removeBtn\":\"ContactItem_removeBtn__1TufG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__u16Kg\",\"wrapper\":\"Filter_wrapper__IqOjQ\"};"],"sourceRoot":""}